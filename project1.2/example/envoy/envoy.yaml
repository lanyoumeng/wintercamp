stats_config:
  stats_tags:
    - tag_name: phase
      regex: "(_phase=([a-z_]+))"
    - tag_name: rule_id
      regex: "(_ruleid=([0-9]+))"
    - tag_name: identifier
      regex: "(_identifier=([0-9a-z.:]+))"
    - tag_name: owner
      regex: "(_owner=([0-9a-z.:]+))"
    - tag_name: authority
      regex: "(_authority=([0-9a-z.:]+))"

static_resources:
  listeners:
    - name: listener1
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 9001
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                codec_type: auto
                route_config:
                  virtual_hosts:
                    - name: local_service
                      domains: ["*"]
                      routes:
                        - match:
                            prefix: "/"
                          route:
                            cluster: service1
                http_filters:
                  - name: envoy.filters.http.wasm
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
                      config:
                        name: "coraza-filter"
                        root_id: ""
                        configuration:
                          "@type": "type.googleapis.com/google.protobuf.StringValue"
                          value: |
                            {
                              "directives_map": {
                                  "rs1": [
                                    "Include @demo-conf",
                                    "Include @crs-setup-conf",
                                    "SecDefaultAction \"phase:3,log,auditlog,pass\"",
                                    "SecDefaultAction \"phase:4,log,auditlog,pass\"",
                                    "SecDefaultAction \"phase:5,log,auditlog,pass\"",
                                    "SecDebugLogLevel 3",
                                    "Include @owasp_crs/*.conf",
                                    "SecRule REQUEST_URI \"@streq /admin\" \"id:101,phase:1,t:lowercase,deny\" \nSecRule REQUEST_BODY \"@rx maliciouspayload\" \"id:102,phase:2,t:lowercase,deny\" \nSecRule RESPONSE_HEADERS::status \"@rx 406\" \"id:103,phase:3,t:lowercase,deny\" \nSecRule RESPONSE_BODY \"@contains responsebodycode\" \"id:104,phase:4,t:lowercase,deny\""
                                  ],
                                  "rs2": [
                                    "Include @demo-conf",
                                    "Include @crs-setup-conf",
                                    "SecDefaultAction \"phase:3,log,auditlog,pass\"",
                                    "SecDefaultAction \"phase:4,log,auditlog,pass\"",
                                    "SecDefaultAction \"phase:5,log,auditlog,pass\"",
                                    "SecDebugLogLevel 3",
                                    "Include @owasp_crs/*.conf",
                                    "SecRule REQUEST_URI \"@streq /example\" \"id:101,phase:1,t:lowercase,deny\" \nSecRule REQUEST_BODY \"@rx maliciouspayload\" \"id:102,phase:2,t:lowercase,deny\" \nSecRule RESPONSE_HEADERS::status \"@rx 406\" \"id:103,phase:3,t:lowercase,deny\" \nSecRule RESPONSE_BODY \"@contains responsebodycode\" \"id:104,phase:4,t:lowercase,deny\""
                                  ]
                              },
                              "default_directives": "rs1",
                              "metric_labels": {
                                "owner": "coraza",
                                "identifier": "global"
                              },
                              "host_directive_map":{
                                  "foo.example.com":"rs2",
                                  "bar.example.com":"rs2"
                              }
                            }
                        vm_config:
                          runtime: "envoy.wasm.runtime.v8"
                          vm_id: "my_vm_id"
                          code:
                            local:
                              filename: "build/main.wasm"
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router



  clusters:
    - name: service1
      connect_timeout: 3s
      type: LOGICAL_DNS
      # ipv4
      dns_lookup_family: V4_ONLY
      load_assignment:
        cluster_name: service1
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: httpbin
                      port_value: 8080
admin:
  access_log_path: /dev/null
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8082


# SecDefaultAction: 设置默认的 ModSecurity 行为，包括阶段（phase）和日志记录。
# SecDebugLogLevel 3: 设置调试日志级别为 3。
# Include @owasp_crs/*.conf: 引入了一组由 OWASP 提供的规则，这些规则通常涵盖了常见的 Web 应用程序安全问题。
# SecRule REQUEST_URI "@streq /admin" ...: 针对请求 URI 的规则，如果请求 URI 与 "/admin" 相等，则执行阻止操作。
# SecRule REQUEST_BODY "@rx maliciouspayload" ...: 针对请求体的规则，如果请求体匹配正则表达式 "maliciouspayload"，则执行阻止操作。
# SecRule RESPONSE_HEADERS::status "@rx 406" ...: 针对响应状态码的规则，如果响应状态码匹配正则表达式 "406"，则执行阻止操作。
# SecRule RESPONSE_BODY "@contains responsebodycode" ...: 针对响应体的规则，如果响应体包含字符串 "responsebodycode"，则执行阻止操作。